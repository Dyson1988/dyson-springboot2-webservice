buildscript {
    ext { //ext : build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
        springBootVersion = '2.1.7.RELEASE' //springBootVersion이라는 전역변수를 생성하고 그 값을 '2.1.7.RELEASE'로 기입
    }
    repositories {
        /*
            repositories : 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정한다.
            기본적으로 mavenCentral을 많이 사용하지만
            최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용한다.
         */
        mavenCentral()
        jcenter()
    }
    dependencies {
        /*
           dependencies : 프로젝트 개발에 필요한 의존성들을 선언하는 곳이다.
           IntelliJ는 메이븐 저장소의 데이터를 인덱싱해서 관리하기 때문에 커뮤니티 버전을 사용해도
           의존성 자동완성이 가능하다.
           spring-boot-gradle-plugin의 2.1.7.RELEASE를 의존성으로 받겠다는 의미이다.
        */
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//4개의 플러그인은 자바와 스프링 부트를 사용하기 위해서는 필수 플러그인들이니 항상 추가해주면 된다.
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //스프링 부트의 의존성들을 관리해 주는 플러그인이라 꼭 추가해 줘야 함.

group 'com.dyson.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.mariadb.jdbc:mariadb-java-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}



